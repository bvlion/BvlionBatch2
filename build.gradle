import com.github.spotbugs.SpotBugsTask

plugins {
	id 'org.springframework.boot' version '2.1.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'idea'
	id 'checkstyle'
	id 'com.github.spotbugs' version '2.0.0'
}

group = 'net.ambitious.bvlion.batch2'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0'
	compileOnly 'org.projectlombok:lombok'
	compileOnly 'com.newrelic.agent.java:newrelic-java:5.7.0'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.twitter4j:twitter4j-core:4.0.+'
	implementation 'org.apache.commons:commons-lang3:3.+'
	implementation 'org.apache.httpcomponents:fluent-hc:4.5.9'
	implementation 'com.flickr4java:flickr4java:3.0.1'
	implementation 'org.jsoup:jsoup:1.11.2'
	implementation 'com.google.api-client:google-api-client:1.25.0'
	implementation 'com.google.firebase:firebase-admin:6.10.0'
	implementation 'com.jcraft:jsch:0.1.54'
	implementation 'com.sun.mail:javax.mail:1.6.2'


	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-all:1.10.19'
	testImplementation 'junit:junit:4.12'

	compile 'com.github.spotbugs:spotbugs:4.0.+'
}

spotbugs {
	toolVersion = '4.0.0-beta4'
	excludeFilter = file("${project.rootDir}/findbugs-exculde.xml")
	spotbugsTest.enabled false
}

checkstyle {
	toolVersion '7.8.1'
	configFile file("$rootDir/checkstyle.xml")
	checkstyleTest.enabled false
}

tasks.withType(SpotBugsTask) {
	reports {
		xml.enabled = false
		html.enabled = true
	}

	classes = classes.filter {
		!it.path.contains(new File("config/").path) &&
				!it.path.contains(new File("net.ambitious.mapper/").path) &&
				!it.path.contains(new File("logback.xml").path)
	}
}
